import{_ as t,c as e,o as a,a4 as o}from"./chunks/framework.4aTu-Nia.js";const f=JSON.parse('{"title":"8.2 - 库中的兼容性问题","description":"","frontmatter":{"title":"8.2 - 库中的兼容性问题","footer":true,"lastUpdated":true,"outline":false},"headers":[],"relativePath":"8.2.md","filePath":"8.2.md"}'),l={name:"8.2.md"},r=o('<h2 id="_8-2-库中的兼容性问题" tabindex="-1">8.2 - 库中的兼容性问题 <a class="header-anchor" href="#_8-2-库中的兼容性问题" aria-label="Permalink to &quot;8.2 - 库中的兼容性问题&quot;">​</a></h2><ul><li><a href="/6.1.html#print">print</a>函数不会调用<a href="/6.1.html#tostring">tostring</a>来格式化其参数，而是有硬实现的方法。你应当使用 __tostring 来改变某个值的打印方式。</li><li><a href="/6.7.html#math.random">math.random</a>中使用的伪随机数生成器现在会从一个有些随机的随机种子开始。此外，其使用了不同的算法。</li><li>默认情况下，<a href="/6.5.html">utf8</a>库中的解码函数不在接受UTF-16中的代理项作为有效码点。如果需要宽松些的码点判断，可以使用相关函数的额外参数（lax）。</li><li><a href="/6.1.html#collectgarbage">collectgarbage</a>函数中的 &quot;setpause&quot; 和 &quot;setstepmul&quot; 选项已经被弃用。你应当使用新选项 &quot;incremental&quot; 来设置它们。</li><li><a href="/6.8.html#io.lines">io.lines</a>函数现在会返回四个值，而不是一个。将该函数的返回值作为另一个函数的唯一参数使用时会有问题，例如 load(io.lines(filename, &quot;L&quot;)) 。为了修复这样的错误，你可以将其用括号括起来，以确保其只会传出一个结果。</li></ul>',2),i=[r];function n(s,_,c,h,m,u){return a(),e("div",null,i)}const p=t(l,[["render",n]]);export{f as __pageData,p as default};
