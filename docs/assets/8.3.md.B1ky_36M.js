import{_ as e,c as a,o as t,a4 as l}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"8.3 - API中的兼容性问题","description":"","frontmatter":{"title":"8.3 - API中的兼容性问题","footer":true,"lastUpdated":true,"outline":false},"headers":[],"relativePath":"8.3.md","filePath":"8.3.md"}'),u={name:"8.3.md"},_=l('<h2 id="_8-3-api中的兼容性问题" tabindex="-1">8.3 - API中的兼容性问题 <a class="header-anchor" href="#_8-3-api中的兼容性问题" aria-label="Permalink to &quot;8.3 - API中的兼容性问题&quot;">​</a></h2><ul><li>full userdat 现在可以有任意数量的 user value 。因此，lua_newuserdata 、lua_setuservalue、以及 lua_getuservalue 函数都被替换为<a href="/4.6.html#lua_newuserdatauv">lua_newuserdatauv</a>、<a href="/4.6.html#lua_setiuservalue">lua_setiuservalue</a>、以及<a href="/4.6.html#lua_getiuservalue">lua_getiuservalue</a>，这些函数都有额外参数。</li><li><a href="/4.6.html#lua_resume">lua_resume</a>函数有了额外参数。由协程所让出或返回的值可以作为若干个参数传入进去。</li><li><a href="/4.6.html#lua_version">lua_version</a>函数会返回版本数字，而不是版本数字的地址。Lua核心应该能够正确地与使用相同核心的静态副本的库一起工作，因此无需检查它们是否使用相同的地址空间。</li><li>常量 LUA_ERRGCMM 被移除。在终结器中发生的错误永远不会传播，而是只会生成一个警告。</li><li><a href="/4.6.html#lua_gc">lua_gc</a>函数的 LUA_GCSETPAUSE 和 LUA_GCSETSTEPMUL 选项被弃用了。你应该使用新选项 LUA_GCINC 来设置它们。</li></ul>',2),r=[_];function s(i,o,n,c,h,d){return t(),a("div",null,r)}const p=e(u,[["render",s]]);export{m as __pageData,p as default};
